name: deploypipeline
on:
  push:
    branches:
      - "main"
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker compose -f docker-compose.yml -f docker-compose.prod.yml push

  deploy-to-droplet:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: SSH into Droplet, clone repo, and build using Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            echo "OPEN_API_TOKEN=${{ secrets.OPEN_API_TOKEN }}" >> .env
            echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" >> .env
            echo "MONGO_USERNAME=${{ secrets.MONGO_USERNAME }}" >> .env
            echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "CLIENT_URL=${{ secrets.CLIENT_URL }}" >> .env

            docker compose down -v
            if [ "$(docker ps -q)" ];then
              docker stop $(docker ps -aq)
              docker rm $(docker ps -aq)
            fi
            if [ "$(docker images -q)" ];then
              docker rmi -f $(docker images -q)
            fi
            if [ "$(docker volume ls -q)" ];then
              docker volume rm $(docker volume ls -q)
            fi
